// <auto-generated />
using System;
using GamesToGo.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamesToGo.API.Migrations
{
    [DbContext(typeof(GamesToGoContext))]
    [Migration("20201127095524_RemoveLogoutTime")]
    partial class RemoveLogoutTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GamesToGo.API.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Hash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastEdited")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Maxplayers")
                        .HasColumnType("int");

                    b.Property<int>("Minplayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("GamesToGo.API.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ReportTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeReported")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ReportTypeID");

                    b.HasIndex("UserId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("GamesToGo.API.Models.ReportType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ID");

                    b.ToTable("ReportType");
                });

            modelBuilder.Entity("GamesToGo.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GamesToGo.API.Models.UserLogin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("GamesToGo.API.Models.UserStatistic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("UserStatistic");
                });

            modelBuilder.Entity("GamesToGo.API.Models.Game", b =>
                {
                    b.HasOne("GamesToGo.API.Models.User", "Creator")
                        .WithMany("Game")
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("GamesToGo.API.Models.Report", b =>
                {
                    b.HasOne("GamesToGo.API.Models.Game", "Game")
                        .WithMany("Report")
                        .HasForeignKey("GameId");

                    b.HasOne("GamesToGo.API.Models.ReportType", "ReportType")
                        .WithMany()
                        .HasForeignKey("ReportTypeID");

                    b.HasOne("GamesToGo.API.Models.User", "User")
                        .WithMany("Report")
                        .HasForeignKey("UserId");

                    b.Navigation("Game");

                    b.Navigation("ReportType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamesToGo.API.Models.UserLogin", b =>
                {
                    b.HasOne("GamesToGo.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamesToGo.API.Models.UserStatistic", b =>
                {
                    b.HasOne("GamesToGo.API.Models.User", "User")
                        .WithMany("UserStatistic")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GamesToGo.API.Models.Game", b =>
                {
                    b.Navigation("Report");
                });

            modelBuilder.Entity("GamesToGo.API.Models.User", b =>
                {
                    b.Navigation("Game");

                    b.Navigation("Report");

                    b.Navigation("UserStatistic");
                });
#pragma warning restore 612, 618
        }
    }
}
